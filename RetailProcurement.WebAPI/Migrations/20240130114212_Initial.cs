using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace RetailProcurement.WebAPI.Migrations
{
    /// <inheritdoc />
    public partial class Initial : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "StoreItems",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Name = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StoreItems", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Suppliers",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Name = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Suppliers", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Orders",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    SupplierId = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Orders", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Orders_Suppliers_SupplierId",
                        column: x => x.SupplierId,
                        principalTable: "Suppliers",
                        principalColumn: "Id");
                });

            migrationBuilder.CreateTable(
                name: "QuarterlyPlans",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Quarter = table.Column<int>(type: "integer", nullable: false),
                    Year = table.Column<int>(type: "integer", nullable: false),
                    SupplierId = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QuarterlyPlans", x => x.Id);
                    table.ForeignKey(
                        name: "FK_QuarterlyPlans_Suppliers_SupplierId",
                        column: x => x.SupplierId,
                        principalTable: "Suppliers",
                        principalColumn: "Id");
                });

            migrationBuilder.CreateTable(
                name: "SupplierStoreItems",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Price = table.Column<decimal>(type: "numeric", nullable: false),
                    StoreItemId = table.Column<int>(type: "integer", nullable: false),
                    SupplierId = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SupplierStoreItems", x => x.Id);
                    table.UniqueConstraint("AK_SupplierStoreItems_StoreItemId_SupplierId", x => new { x.StoreItemId, x.SupplierId });
                    table.ForeignKey(
                        name: "FK_SupplierStoreItems_StoreItems_StoreItemId",
                        column: x => x.StoreItemId,
                        principalTable: "StoreItems",
                        principalColumn: "Id");
                    table.ForeignKey(
                        name: "FK_SupplierStoreItems_Suppliers_StoreItemId",
                        column: x => x.StoreItemId,
                        principalTable: "Suppliers",
                        principalColumn: "Id");
                });

            migrationBuilder.CreateTable(
                name: "OrderItemSupplier",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Quantity = table.Column<decimal>(type: "numeric", nullable: false),
                    Price = table.Column<decimal>(type: "numeric", nullable: false),
                    OrderId = table.Column<int>(type: "integer", nullable: false),
                    SupplierStoreItemId = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OrderItemSupplier", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OrderItemSupplier_Orders_OrderId",
                        column: x => x.OrderId,
                        principalTable: "Orders",
                        principalColumn: "Id");
                    table.ForeignKey(
                        name: "FK_OrderItemSupplier_SupplierStoreItems_SupplierStoreItemId",
                        column: x => x.SupplierStoreItemId,
                        principalTable: "SupplierStoreItems",
                        principalColumn: "Id");
                });

            migrationBuilder.InsertData(
                table: "StoreItems",
                columns: new[] { "Id", "Name" },
                values: new object[,]
                {
                    { 1, "Cheese" },
                    { 2, "Chips" },
                    { 3, "Ball" },
                    { 4, "Soap" },
                    { 5, "Cheese" },
                    { 6, "Car" },
                    { 7, "Cheese" },
                    { 8, "Chips" },
                    { 9, "Shoes" },
                    { 10, "Towels" },
                    { 11, "Computer" },
                    { 12, "Salad" },
                    { 13, "Chips" },
                    { 14, "Fish" },
                    { 15, "Towels" },
                    { 16, "Shirt" },
                    { 17, "Chips" },
                    { 18, "Keyboard" },
                    { 19, "Gloves" },
                    { 20, "Gloves" },
                    { 21, "Bike" },
                    { 22, "Mouse" },
                    { 23, "Hat" },
                    { 24, "Ball" },
                    { 25, "Pants" },
                    { 26, "Salad" },
                    { 27, "Mouse" },
                    { 28, "Gloves" },
                    { 29, "Keyboard" },
                    { 30, "Cheese" },
                    { 31, "Chips" },
                    { 32, "Chips" },
                    { 33, "Chips" },
                    { 34, "Shoes" },
                    { 35, "Chips" },
                    { 36, "Chips" },
                    { 37, "Chair" },
                    { 38, "Chips" },
                    { 39, "Fish" },
                    { 40, "Keyboard" }
                });

            migrationBuilder.InsertData(
                table: "Suppliers",
                columns: new[] { "Id", "Name" },
                values: new object[,]
                {
                    { 1, "Hettinger Inc" },
                    { 2, "Nitzsche, Paucek and Hermiston" },
                    { 3, "Runolfsson LLC" },
                    { 4, "Stiedemann, Ratke and Ryan" },
                    { 5, "Langosh LLC" },
                    { 6, "Connelly - Lehner" },
                    { 7, "Upton and Sons" },
                    { 8, "Hoeger, DuBuque and Sipes" },
                    { 9, "Hirthe Group" },
                    { 10, "Bernhard - Kunde" },
                    { 11, "Renner - Gutkowski" },
                    { 12, "Schulist, Gulgowski and Schroeder" },
                    { 13, "Veum - Schiller" },
                    { 14, "Ullrich and Sons" },
                    { 15, "Mann - Sawayn" },
                    { 16, "Kuvalis Group" },
                    { 17, "Thiel - Gerhold" },
                    { 18, "Boyer - Breitenberg" },
                    { 19, "Ullrich, Anderson and Daniel" },
                    { 20, "Dare, Smitham and Marks" },
                    { 21, "Morissette Group" },
                    { 22, "Stamm, Lesch and Metz" },
                    { 23, "Daniel Inc" },
                    { 24, "Grady Group" },
                    { 25, "Champlin - Beahan" },
                    { 26, "Romaguera and Sons" },
                    { 27, "Boehm - Hilll" },
                    { 28, "Grant, Beier and Lang" },
                    { 29, "Hane Inc" },
                    { 30, "Morissette Group" },
                    { 31, "Howe - Huels" },
                    { 32, "Trantow Group" },
                    { 33, "Crist - Torphy" },
                    { 34, "Gibson and Sons" },
                    { 35, "Conn - Gorczany" },
                    { 36, "Lemke, Rolfson and Osinski" },
                    { 37, "Koss - Dibbert" },
                    { 38, "Doyle, Casper and Considine" },
                    { 39, "Lowe Group" },
                    { 40, "Considine, Spinka and Buckridge" }
                });

            migrationBuilder.InsertData(
                table: "Orders",
                columns: new[] { "Id", "SupplierId" },
                values: new object[,]
                {
                    { 1, 1 },
                    { 2, 1 },
                    { 3, 1 },
                    { 4, 1 },
                    { 5, 1 },
                    { 6, 1 },
                    { 7, 1 },
                    { 8, 1 },
                    { 9, 1 },
                    { 10, 1 },
                    { 11, 1 },
                    { 12, 2 },
                    { 13, 2 },
                    { 14, 2 },
                    { 15, 2 },
                    { 16, 2 },
                    { 17, 2 },
                    { 18, 2 },
                    { 19, 2 },
                    { 20, 2 },
                    { 21, 2 },
                    { 22, 2 },
                    { 23, 3 },
                    { 24, 3 },
                    { 25, 3 },
                    { 26, 3 },
                    { 27, 3 },
                    { 28, 3 },
                    { 29, 3 },
                    { 30, 3 },
                    { 31, 3 },
                    { 32, 3 },
                    { 33, 3 },
                    { 34, 3 },
                    { 35, 3 },
                    { 36, 3 },
                    { 37, 3 },
                    { 38, 3 },
                    { 39, 3 },
                    { 40, 3 },
                    { 41, 4 },
                    { 42, 4 },
                    { 43, 4 },
                    { 44, 4 },
                    { 45, 4 },
                    { 46, 4 },
                    { 47, 4 },
                    { 48, 4 },
                    { 49, 4 },
                    { 50, 4 },
                    { 51, 4 },
                    { 52, 4 },
                    { 53, 4 },
                    { 54, 4 },
                    { 55, 4 },
                    { 56, 4 },
                    { 57, 5 },
                    { 58, 5 },
                    { 59, 5 },
                    { 60, 5 },
                    { 61, 5 },
                    { 62, 6 },
                    { 63, 7 },
                    { 64, 7 },
                    { 65, 7 },
                    { 66, 7 },
                    { 67, 7 },
                    { 68, 7 },
                    { 69, 7 },
                    { 70, 8 },
                    { 71, 8 },
                    { 72, 8 },
                    { 73, 8 },
                    { 74, 8 },
                    { 75, 8 },
                    { 76, 8 },
                    { 77, 8 },
                    { 78, 8 },
                    { 79, 8 },
                    { 80, 8 },
                    { 81, 8 },
                    { 82, 8 },
                    { 83, 8 },
                    { 84, 8 },
                    { 85, 8 },
                    { 86, 9 },
                    { 87, 9 },
                    { 88, 9 },
                    { 89, 9 },
                    { 90, 9 },
                    { 91, 9 },
                    { 92, 9 },
                    { 93, 9 },
                    { 94, 9 },
                    { 95, 9 },
                    { 96, 9 },
                    { 97, 9 },
                    { 98, 9 },
                    { 99, 9 },
                    { 100, 9 },
                    { 101, 9 },
                    { 102, 10 },
                    { 103, 10 },
                    { 104, 10 },
                    { 105, 11 },
                    { 106, 11 },
                    { 107, 11 },
                    { 108, 11 },
                    { 109, 12 },
                    { 110, 12 },
                    { 111, 12 },
                    { 112, 12 },
                    { 113, 12 },
                    { 114, 13 },
                    { 115, 13 },
                    { 116, 13 },
                    { 117, 13 },
                    { 118, 13 },
                    { 119, 13 },
                    { 120, 13 },
                    { 121, 13 },
                    { 122, 13 },
                    { 123, 13 },
                    { 124, 13 },
                    { 125, 13 },
                    { 126, 14 },
                    { 127, 15 },
                    { 128, 15 },
                    { 129, 15 },
                    { 130, 15 },
                    { 131, 15 },
                    { 132, 15 },
                    { 133, 15 },
                    { 134, 15 },
                    { 135, 15 },
                    { 136, 15 },
                    { 137, 15 },
                    { 138, 15 },
                    { 139, 15 },
                    { 140, 15 },
                    { 141, 15 },
                    { 142, 15 },
                    { 143, 16 },
                    { 144, 16 },
                    { 145, 16 },
                    { 146, 16 },
                    { 147, 16 },
                    { 148, 17 },
                    { 149, 17 },
                    { 150, 17 },
                    { 151, 17 },
                    { 152, 17 },
                    { 153, 17 },
                    { 154, 17 },
                    { 155, 17 },
                    { 156, 17 },
                    { 157, 17 },
                    { 158, 17 },
                    { 159, 17 },
                    { 160, 17 },
                    { 161, 18 },
                    { 162, 18 },
                    { 163, 18 },
                    { 164, 18 },
                    { 165, 18 },
                    { 166, 18 },
                    { 167, 18 },
                    { 168, 18 },
                    { 169, 19 },
                    { 170, 19 },
                    { 171, 19 },
                    { 172, 19 },
                    { 173, 19 },
                    { 174, 19 },
                    { 175, 19 },
                    { 176, 19 },
                    { 177, 19 },
                    { 178, 19 },
                    { 179, 19 },
                    { 180, 19 },
                    { 181, 20 },
                    { 182, 20 },
                    { 183, 20 },
                    { 184, 20 },
                    { 185, 20 },
                    { 186, 20 },
                    { 187, 20 },
                    { 188, 20 },
                    { 189, 20 },
                    { 190, 20 },
                    { 191, 20 },
                    { 192, 20 },
                    { 193, 20 },
                    { 194, 20 },
                    { 195, 20 },
                    { 196, 20 },
                    { 197, 20 },
                    { 198, 20 },
                    { 199, 21 },
                    { 200, 21 },
                    { 201, 21 },
                    { 202, 21 },
                    { 203, 21 },
                    { 204, 21 },
                    { 205, 21 },
                    { 206, 21 },
                    { 207, 21 },
                    { 208, 21 },
                    { 209, 21 },
                    { 210, 21 },
                    { 211, 22 },
                    { 212, 22 },
                    { 213, 22 },
                    { 214, 22 },
                    { 215, 22 },
                    { 216, 22 },
                    { 217, 23 },
                    { 218, 23 },
                    { 219, 23 },
                    { 220, 23 },
                    { 221, 23 },
                    { 222, 24 },
                    { 223, 24 },
                    { 224, 24 },
                    { 225, 25 },
                    { 226, 25 },
                    { 227, 25 },
                    { 228, 25 },
                    { 229, 25 },
                    { 230, 25 },
                    { 231, 25 },
                    { 232, 26 },
                    { 233, 26 },
                    { 234, 26 },
                    { 235, 26 },
                    { 236, 27 },
                    { 237, 27 },
                    { 238, 27 },
                    { 239, 28 },
                    { 240, 28 },
                    { 241, 28 },
                    { 242, 28 },
                    { 243, 28 },
                    { 244, 28 },
                    { 245, 28 },
                    { 246, 28 },
                    { 247, 28 },
                    { 248, 28 },
                    { 249, 28 },
                    { 250, 29 },
                    { 251, 29 },
                    { 252, 29 },
                    { 253, 30 },
                    { 254, 30 },
                    { 255, 30 },
                    { 256, 30 },
                    { 257, 30 },
                    { 258, 30 },
                    { 259, 30 },
                    { 260, 30 },
                    { 261, 30 },
                    { 262, 30 },
                    { 263, 30 },
                    { 264, 31 },
                    { 265, 31 },
                    { 266, 31 },
                    { 267, 31 },
                    { 268, 31 },
                    { 269, 31 },
                    { 270, 31 },
                    { 271, 31 },
                    { 272, 31 },
                    { 273, 31 },
                    { 274, 31 },
                    { 275, 31 },
                    { 276, 31 },
                    { 277, 31 },
                    { 278, 31 },
                    { 279, 31 },
                    { 280, 31 },
                    { 281, 31 },
                    { 282, 31 },
                    { 283, 32 },
                    { 284, 32 },
                    { 285, 32 },
                    { 286, 32 },
                    { 287, 32 },
                    { 288, 33 },
                    { 289, 33 },
                    { 290, 33 },
                    { 291, 33 },
                    { 292, 33 },
                    { 293, 33 },
                    { 294, 33 },
                    { 295, 33 },
                    { 296, 33 },
                    { 297, 33 },
                    { 298, 33 },
                    { 299, 33 },
                    { 300, 33 },
                    { 301, 33 },
                    { 302, 33 },
                    { 303, 33 },
                    { 304, 34 },
                    { 305, 34 },
                    { 306, 34 },
                    { 307, 34 },
                    { 308, 34 },
                    { 309, 34 },
                    { 310, 34 },
                    { 311, 34 },
                    { 312, 35 },
                    { 313, 35 },
                    { 314, 35 },
                    { 315, 35 },
                    { 316, 35 },
                    { 317, 35 },
                    { 318, 35 },
                    { 319, 35 },
                    { 320, 35 },
                    { 321, 35 },
                    { 322, 35 },
                    { 323, 35 },
                    { 324, 35 },
                    { 325, 35 },
                    { 326, 35 },
                    { 327, 35 },
                    { 328, 35 },
                    { 329, 35 },
                    { 330, 36 },
                    { 331, 37 },
                    { 332, 37 },
                    { 333, 37 },
                    { 334, 38 },
                    { 335, 38 },
                    { 336, 38 },
                    { 337, 39 },
                    { 338, 40 },
                    { 339, 40 },
                    { 340, 40 },
                    { 341, 40 },
                    { 342, 40 }
                });

            migrationBuilder.InsertData(
                table: "SupplierStoreItems",
                columns: new[] { "Id", "Price", "StoreItemId", "SupplierId" },
                values: new object[,]
                {
                    { 1, 1523.43m, 20, 1 },
                    { 2, 2754.60m, 29, 1 },
                    { 3, 1568.91m, 8, 1 },
                    { 4, 97.28m, 27, 1 },
                    { 5, 467.60m, 30, 1 },
                    { 6, 874.60m, 23, 1 },
                    { 7, 2087.80m, 34, 1 },
                    { 8, 983.44m, 24, 1 },
                    { 9, 1958.59m, 18, 1 },
                    { 10, 823.26m, 14, 1 },
                    { 11, 2113.95m, 37, 2 },
                    { 12, 2219.20m, 13, 2 },
                    { 13, 265.12m, 21, 2 },
                    { 14, 2338.42m, 29, 2 },
                    { 15, 60.56m, 23, 2 },
                    { 16, 507.40m, 7, 2 },
                    { 17, 2015.82m, 24, 2 },
                    { 18, 1669.93m, 30, 2 },
                    { 19, 2282.18m, 35, 2 },
                    { 20, 2558.64m, 17, 2 },
                    { 21, 1886.64m, 31, 3 },
                    { 22, 1112.24m, 14, 3 },
                    { 23, 2536.45m, 20, 3 },
                    { 24, 2233.75m, 7, 3 },
                    { 25, 1638.95m, 27, 3 },
                    { 26, 2490.39m, 6, 3 },
                    { 27, 1031.50m, 25, 3 },
                    { 28, 2969.63m, 15, 3 },
                    { 29, 2208.69m, 1, 3 },
                    { 30, 1430.55m, 37, 3 },
                    { 31, 1898.58m, 13, 4 },
                    { 32, 29.40m, 31, 4 },
                    { 33, 665.58m, 27, 4 },
                    { 34, 2371.54m, 25, 4 },
                    { 35, 934.88m, 24, 4 },
                    { 36, 768.45m, 32, 4 },
                    { 37, 626.44m, 7, 4 },
                    { 38, 1574.82m, 29, 4 },
                    { 39, 1366.33m, 38, 4 },
                    { 40, 2684.85m, 15, 4 },
                    { 41, 2216.07m, 40, 5 },
                    { 42, 2308.57m, 36, 5 },
                    { 43, 1928.09m, 39, 5 },
                    { 44, 715.34m, 20, 5 },
                    { 45, 626.86m, 3, 5 },
                    { 46, 84.78m, 17, 5 },
                    { 47, 392.27m, 15, 5 },
                    { 48, 779.31m, 34, 5 },
                    { 49, 1924.50m, 9, 5 },
                    { 50, 1762.52m, 5, 5 },
                    { 51, 1650.52m, 23, 6 },
                    { 52, 2414.25m, 9, 6 },
                    { 53, 2182.12m, 2, 6 },
                    { 54, 717.16m, 16, 6 },
                    { 55, 999.47m, 28, 6 },
                    { 56, 1523.05m, 22, 6 },
                    { 57, 1994.39m, 13, 6 },
                    { 58, 1636.85m, 11, 6 },
                    { 59, 2666.20m, 3, 6 },
                    { 60, 2312.09m, 8, 6 },
                    { 61, 2441.64m, 33, 7 },
                    { 62, 1659.00m, 14, 7 },
                    { 63, 1197.54m, 11, 7 },
                    { 64, 1189.60m, 28, 7 },
                    { 65, 2409.92m, 31, 7 },
                    { 66, 836.52m, 26, 7 },
                    { 67, 2873.28m, 4, 7 },
                    { 68, 2148.80m, 25, 7 },
                    { 69, 2137.49m, 32, 7 },
                    { 70, 1819.40m, 35, 7 },
                    { 71, 2678.76m, 17, 8 },
                    { 72, 1137.46m, 13, 8 },
                    { 73, 1145.77m, 27, 8 },
                    { 74, 2572.87m, 39, 8 },
                    { 75, 2047.57m, 28, 8 },
                    { 76, 2966.81m, 1, 8 },
                    { 77, 1390.75m, 8, 8 },
                    { 78, 1407.26m, 37, 8 },
                    { 79, 736.40m, 40, 8 },
                    { 80, 2275.42m, 19, 8 },
                    { 81, 1491.21m, 5, 9 },
                    { 82, 1307.99m, 1, 9 },
                    { 83, 1241.78m, 29, 9 },
                    { 84, 245.38m, 24, 9 },
                    { 85, 2843.39m, 14, 9 },
                    { 86, 321.92m, 2, 9 },
                    { 87, 2609.51m, 37, 9 },
                    { 88, 2049.10m, 36, 9 },
                    { 89, 2434.79m, 19, 9 },
                    { 90, 1413.45m, 28, 9 },
                    { 91, 766.15m, 15, 10 },
                    { 92, 2960.14m, 3, 10 },
                    { 93, 1401.30m, 27, 10 },
                    { 94, 1128.66m, 4, 10 },
                    { 95, 585.50m, 36, 10 },
                    { 96, 1908.69m, 25, 10 },
                    { 97, 2289.58m, 17, 10 },
                    { 98, 2642.85m, 24, 10 },
                    { 99, 1903.28m, 28, 10 },
                    { 100, 1122.31m, 26, 10 },
                    { 101, 2732.56m, 12, 11 },
                    { 102, 1846.23m, 11, 11 },
                    { 103, 2884.72m, 24, 11 },
                    { 104, 2506.93m, 17, 11 },
                    { 105, 783.68m, 1, 11 },
                    { 106, 2990.00m, 16, 11 },
                    { 107, 248.78m, 28, 11 },
                    { 108, 882.50m, 4, 11 },
                    { 109, 2479.52m, 13, 11 },
                    { 110, 2981.70m, 30, 11 },
                    { 111, 2386.04m, 7, 12 },
                    { 112, 1893.28m, 13, 12 },
                    { 113, 781.40m, 33, 12 },
                    { 114, 1688.00m, 15, 12 },
                    { 115, 1252.01m, 11, 12 },
                    { 116, 568.24m, 14, 12 },
                    { 117, 2602.47m, 16, 12 },
                    { 118, 888.38m, 25, 12 },
                    { 119, 530.23m, 12, 12 },
                    { 120, 150.52m, 37, 12 },
                    { 121, 773.85m, 28, 13 },
                    { 122, 1748.61m, 31, 13 },
                    { 123, 1100.33m, 35, 13 },
                    { 124, 798.88m, 13, 13 },
                    { 125, 2941.89m, 9, 13 },
                    { 126, 2575.25m, 24, 13 },
                    { 127, 514.87m, 21, 13 },
                    { 128, 2322.57m, 4, 13 },
                    { 129, 214.86m, 1, 13 },
                    { 130, 664.57m, 23, 13 },
                    { 131, 1144.20m, 34, 14 },
                    { 132, 1378.55m, 5, 14 },
                    { 133, 2169.82m, 36, 14 },
                    { 134, 2640.64m, 31, 14 },
                    { 135, 472.10m, 40, 14 },
                    { 136, 3.42m, 1, 14 },
                    { 137, 2246.80m, 24, 14 },
                    { 138, 549.56m, 20, 14 },
                    { 139, 16.78m, 11, 14 },
                    { 140, 2993.78m, 29, 14 },
                    { 141, 605.13m, 13, 15 },
                    { 142, 1495.80m, 38, 15 },
                    { 143, 106.63m, 31, 15 },
                    { 144, 485.91m, 26, 15 },
                    { 145, 704.46m, 35, 15 },
                    { 146, 2947.76m, 6, 15 },
                    { 147, 69.11m, 19, 15 },
                    { 148, 2147.83m, 20, 15 },
                    { 149, 2811.19m, 16, 15 },
                    { 150, 2227.18m, 3, 15 },
                    { 151, 1775.19m, 30, 16 },
                    { 152, 1363.07m, 17, 16 },
                    { 153, 683.36m, 36, 16 },
                    { 154, 515.28m, 38, 16 },
                    { 155, 105.28m, 29, 16 },
                    { 156, 1325.25m, 24, 16 },
                    { 157, 2604.96m, 37, 16 },
                    { 158, 1960.36m, 13, 16 },
                    { 159, 1731.21m, 15, 16 },
                    { 160, 2627.31m, 19, 16 },
                    { 161, 1000.46m, 15, 17 },
                    { 162, 1689.65m, 6, 17 },
                    { 163, 2397.48m, 27, 17 },
                    { 164, 1090.61m, 26, 17 },
                    { 165, 1514.39m, 7, 17 },
                    { 166, 2669.30m, 9, 17 },
                    { 167, 2151.09m, 17, 17 },
                    { 168, 2820.68m, 36, 17 },
                    { 169, 1483.32m, 12, 17 },
                    { 170, 1346.51m, 24, 17 },
                    { 171, 1058.64m, 31, 18 },
                    { 172, 55.42m, 12, 18 },
                    { 173, 1788.98m, 24, 18 },
                    { 174, 800.07m, 15, 18 },
                    { 175, 536.48m, 1, 18 },
                    { 176, 450.14m, 37, 18 },
                    { 177, 71.05m, 39, 18 },
                    { 178, 2472.16m, 25, 18 },
                    { 179, 1347.54m, 26, 18 },
                    { 180, 1714.16m, 35, 18 },
                    { 181, 2694.82m, 20, 19 },
                    { 182, 54.26m, 26, 19 },
                    { 183, 2280.87m, 25, 19 },
                    { 184, 2574.40m, 32, 19 },
                    { 185, 1969.99m, 17, 19 },
                    { 186, 2950.00m, 40, 19 },
                    { 187, 205.52m, 4, 19 },
                    { 188, 2592.12m, 18, 19 },
                    { 189, 2923.82m, 13, 19 },
                    { 190, 479.60m, 31, 19 },
                    { 191, 384.79m, 37, 20 },
                    { 192, 22.76m, 14, 20 },
                    { 193, 1825.36m, 26, 20 },
                    { 194, 2731.77m, 23, 20 },
                    { 195, 1463.71m, 31, 20 },
                    { 196, 1792.43m, 33, 20 },
                    { 197, 1577.70m, 25, 20 },
                    { 198, 1516.88m, 4, 20 },
                    { 199, 1057.35m, 19, 20 },
                    { 200, 1401.63m, 12, 20 },
                    { 201, 785.88m, 30, 21 },
                    { 202, 2815.34m, 8, 21 },
                    { 203, 2683.78m, 29, 21 },
                    { 204, 2905.44m, 22, 21 },
                    { 205, 1584.40m, 25, 21 },
                    { 206, 1181.63m, 7, 21 },
                    { 207, 105.02m, 20, 21 },
                    { 208, 1993.93m, 16, 21 },
                    { 209, 2354.70m, 34, 21 },
                    { 210, 2525.47m, 38, 21 },
                    { 211, 2446.79m, 35, 22 },
                    { 212, 535.81m, 24, 22 },
                    { 213, 309.00m, 10, 22 },
                    { 214, 2996.71m, 22, 22 },
                    { 215, 2113.89m, 13, 22 },
                    { 216, 2431.71m, 21, 22 },
                    { 217, 2199.91m, 19, 22 },
                    { 218, 600.38m, 2, 22 },
                    { 219, 1077.15m, 29, 22 },
                    { 220, 768.55m, 28, 22 },
                    { 221, 2712.41m, 18, 23 },
                    { 222, 2111.53m, 21, 23 },
                    { 223, 488.38m, 32, 23 },
                    { 224, 7.40m, 22, 23 },
                    { 225, 701.66m, 29, 23 },
                    { 226, 913.30m, 27, 23 },
                    { 227, 46.64m, 20, 23 },
                    { 228, 1558.08m, 11, 23 },
                    { 229, 1864.09m, 37, 23 },
                    { 230, 1994.17m, 13, 23 },
                    { 231, 688.52m, 30, 24 },
                    { 232, 841.13m, 12, 24 },
                    { 233, 1797.46m, 23, 24 },
                    { 234, 942.73m, 27, 24 },
                    { 235, 957.02m, 18, 24 },
                    { 236, 144.98m, 24, 24 },
                    { 237, 2751.94m, 28, 24 },
                    { 238, 1786.42m, 37, 24 },
                    { 239, 2783.18m, 7, 24 },
                    { 240, 943.63m, 15, 24 },
                    { 241, 2303.44m, 4, 25 },
                    { 242, 2979.65m, 32, 25 },
                    { 243, 2082.33m, 7, 25 },
                    { 244, 2627.56m, 21, 25 },
                    { 245, 251.74m, 16, 25 },
                    { 246, 2017.86m, 22, 25 },
                    { 247, 2561.71m, 36, 25 },
                    { 248, 625.52m, 12, 25 },
                    { 249, 1093.17m, 14, 25 },
                    { 250, 1837.16m, 25, 25 },
                    { 251, 1414.15m, 3, 26 },
                    { 252, 1101.52m, 21, 26 },
                    { 253, 2004.65m, 27, 26 },
                    { 254, 856.67m, 18, 26 },
                    { 255, 1648.86m, 26, 26 },
                    { 256, 527.64m, 39, 26 },
                    { 257, 2626.97m, 19, 26 },
                    { 258, 199.91m, 4, 26 },
                    { 259, 1452.18m, 10, 26 },
                    { 260, 1554.78m, 15, 26 },
                    { 261, 963.49m, 9, 27 },
                    { 262, 493.62m, 11, 27 },
                    { 263, 150.63m, 5, 27 },
                    { 264, 2443.48m, 26, 27 },
                    { 265, 497.08m, 39, 27 },
                    { 266, 2842.39m, 33, 27 },
                    { 267, 2433.86m, 8, 27 },
                    { 268, 66.78m, 32, 27 },
                    { 269, 918.83m, 14, 27 },
                    { 270, 713.95m, 36, 27 },
                    { 271, 2287.99m, 22, 28 },
                    { 272, 1336.53m, 20, 28 },
                    { 273, 794.56m, 40, 28 },
                    { 274, 2123.93m, 8, 28 },
                    { 275, 2967.86m, 36, 28 },
                    { 276, 301.05m, 10, 28 },
                    { 277, 52.47m, 25, 28 },
                    { 278, 2263.38m, 19, 28 },
                    { 279, 398.31m, 9, 28 },
                    { 280, 857.00m, 2, 28 },
                    { 281, 703.90m, 18, 29 },
                    { 282, 2955.84m, 25, 29 },
                    { 283, 1506.17m, 16, 29 },
                    { 284, 2126.23m, 34, 29 },
                    { 285, 1178.35m, 40, 29 },
                    { 286, 2098.37m, 27, 29 },
                    { 287, 611.59m, 14, 29 },
                    { 288, 644.58m, 37, 29 },
                    { 289, 2163.98m, 33, 29 },
                    { 290, 2283.50m, 2, 29 },
                    { 291, 2373.85m, 27, 30 },
                    { 292, 1987.73m, 17, 30 },
                    { 293, 621.17m, 40, 30 },
                    { 294, 2199.32m, 31, 30 },
                    { 295, 1615.44m, 36, 30 },
                    { 296, 2275.25m, 18, 30 },
                    { 297, 648.86m, 14, 30 },
                    { 298, 1587.62m, 39, 30 },
                    { 299, 447.66m, 21, 30 },
                    { 300, 1049.02m, 29, 30 },
                    { 301, 1952.76m, 12, 31 },
                    { 302, 2038.87m, 35, 31 },
                    { 303, 2659.38m, 36, 31 },
                    { 304, 1196.88m, 19, 31 },
                    { 305, 2080.50m, 14, 31 },
                    { 306, 529.61m, 25, 31 },
                    { 307, 1843.61m, 34, 31 },
                    { 308, 2701.55m, 20, 31 },
                    { 309, 2490.22m, 29, 31 },
                    { 310, 883.96m, 32, 31 },
                    { 311, 2374.96m, 37, 32 },
                    { 312, 1722.69m, 1, 32 },
                    { 313, 2024.58m, 20, 32 },
                    { 314, 2617.27m, 30, 32 },
                    { 315, 1367.90m, 14, 32 },
                    { 316, 1524.43m, 23, 32 },
                    { 317, 1647.79m, 6, 32 },
                    { 318, 1636.87m, 4, 32 },
                    { 319, 2020.66m, 9, 32 },
                    { 320, 1047.84m, 28, 32 },
                    { 321, 1723.03m, 36, 33 },
                    { 322, 1830.22m, 2, 33 },
                    { 323, 895.78m, 32, 33 },
                    { 324, 633.41m, 39, 33 },
                    { 325, 694.19m, 20, 33 },
                    { 326, 2692.18m, 4, 33 },
                    { 327, 284.93m, 10, 33 },
                    { 328, 2812.20m, 25, 33 },
                    { 329, 2837.30m, 16, 33 },
                    { 330, 2759.66m, 7, 33 },
                    { 331, 1012.53m, 35, 34 },
                    { 332, 1728.23m, 16, 34 },
                    { 333, 2444.07m, 17, 34 },
                    { 334, 1050.67m, 36, 34 },
                    { 335, 1022.32m, 2, 34 },
                    { 336, 2310.89m, 26, 34 },
                    { 337, 220.79m, 5, 34 },
                    { 338, 147.16m, 11, 34 },
                    { 339, 1097.91m, 1, 34 },
                    { 340, 402.49m, 40, 34 },
                    { 341, 2142.08m, 7, 35 },
                    { 342, 287.93m, 1, 35 },
                    { 343, 414.32m, 31, 35 },
                    { 344, 365.95m, 38, 35 },
                    { 345, 1919.94m, 10, 35 },
                    { 346, 2462.48m, 35, 35 },
                    { 347, 2383.81m, 6, 35 },
                    { 348, 1461.16m, 21, 35 },
                    { 349, 2997.41m, 27, 35 },
                    { 350, 956.81m, 20, 35 },
                    { 351, 2826.61m, 8, 36 },
                    { 352, 2735.00m, 37, 36 },
                    { 353, 1662.93m, 30, 36 },
                    { 354, 2430.11m, 10, 36 },
                    { 355, 522.25m, 5, 36 },
                    { 356, 725.86m, 23, 36 },
                    { 357, 2750.59m, 27, 36 },
                    { 358, 1884.14m, 20, 36 },
                    { 359, 1586.81m, 14, 36 },
                    { 360, 1007.99m, 17, 36 },
                    { 361, 102.06m, 26, 37 },
                    { 362, 2477.13m, 28, 37 },
                    { 363, 2651.84m, 9, 37 },
                    { 364, 1656.38m, 12, 37 },
                    { 365, 1848.87m, 2, 37 },
                    { 366, 614.69m, 23, 37 },
                    { 367, 1933.15m, 35, 37 },
                    { 368, 328.06m, 27, 37 },
                    { 369, 283.18m, 20, 37 },
                    { 370, 1384.13m, 39, 37 },
                    { 371, 2421.00m, 1, 38 },
                    { 372, 2973.92m, 18, 38 },
                    { 373, 24.85m, 8, 38 },
                    { 374, 748.03m, 38, 38 },
                    { 375, 2713.57m, 6, 38 },
                    { 376, 391.43m, 10, 38 },
                    { 377, 2299.38m, 21, 38 },
                    { 378, 385.64m, 3, 38 },
                    { 379, 873.54m, 27, 38 },
                    { 380, 1724.63m, 30, 38 },
                    { 381, 663.81m, 11, 39 },
                    { 382, 408.12m, 6, 39 },
                    { 383, 994.78m, 24, 39 },
                    { 384, 2435.27m, 23, 39 },
                    { 385, 2219.33m, 8, 39 },
                    { 386, 1407.89m, 32, 39 },
                    { 387, 26.71m, 12, 39 },
                    { 388, 564.74m, 35, 39 },
                    { 389, 1119.60m, 3, 39 },
                    { 390, 1248.51m, 2, 39 },
                    { 391, 2421.04m, 37, 40 },
                    { 392, 2271.49m, 10, 40 },
                    { 393, 799.97m, 39, 40 },
                    { 394, 2390.79m, 17, 40 },
                    { 395, 856.41m, 28, 40 },
                    { 396, 2303.24m, 4, 40 },
                    { 397, 1663.43m, 35, 40 },
                    { 398, 650.44m, 8, 40 },
                    { 399, 1013.52m, 5, 40 },
                    { 400, 41.04m, 30, 40 }
                });

            migrationBuilder.InsertData(
                table: "OrderItemSupplier",
                columns: new[] { "Id", "OrderId", "Price", "Quantity", "SupplierStoreItemId" },
                values: new object[,]
                {
                    { 1, 9, 2754.60m, 3m, 3 },
                    { 2, 20, 2219.20m, 4m, 19 },
                    { 3, 37, 2233.75m, 8m, 22 },
                    { 4, 53, 2371.54m, 8m, 39 },
                    { 5, 60, 2216.07m, 2m, 49 },
                    { 6, 62, 999.47m, 9m, 51 },
                    { 7, 68, 2409.92m, 6m, 70 },
                    { 8, 82, 1407.26m, 9m, 80 },
                    { 9, 98, 1307.99m, 9m, 81 },
                    { 10, 104, 1908.69m, 6m, 94 },
                    { 11, 108, 783.68m, 9m, 109 },
                    { 12, 112, 2386.04m, 4m, 113 },
                    { 13, 123, 514.87m, 3m, 130 },
                    { 14, 126, 2993.78m, 6m, 132 },
                    { 15, 139, 69.11m, 2m, 143 },
                    { 16, 146, 1325.25m, 9m, 157 },
                    { 17, 158, 2151.09m, 4m, 170 },
                    { 18, 167, 71.05m, 4m, 171 },
                    { 19, 178, 2592.12m, 3m, 183 },
                    { 20, 195, 1057.35m, 7m, 196 },
                    { 21, 208, 2354.70m, 7m, 204 },
                    { 22, 215, 2199.91m, 5m, 215 },
                    { 23, 220, 2712.41m, 6m, 230 },
                    { 24, 224, 2751.94m, 1m, 231 },
                    { 25, 230, 2979.65m, 2m, 249 },
                    { 26, 235, 856.67m, 9m, 253 },
                    { 27, 238, 2433.86m, 7m, 270 },
                    { 28, 247, 2287.99m, 7m, 273 },
                    { 29, 252, 644.58m, 6m, 284 },
                    { 30, 261, 447.66m, 9m, 292 },
                    { 31, 279, 2701.55m, 1m, 303 },
                    { 32, 286, 2374.96m, 7m, 315 },
                    { 33, 300, 1723.03m, 4m, 324 },
                    { 34, 310, 1022.32m, 5m, 336 },
                    { 35, 326, 287.93m, 7m, 341 },
                    { 36, 330, 522.25m, 7m, 358 },
                    { 37, 333, 328.06m, 6m, 366 },
                    { 38, 336, 2973.92m, 1m, 376 },
                    { 39, 337, 1407.89m, 9m, 381 },
                    { 40, 341, 1663.43m, 3m, 395 }
                });

            migrationBuilder.CreateIndex(
                name: "IX_OrderItemSupplier_OrderId",
                table: "OrderItemSupplier",
                column: "OrderId");

            migrationBuilder.CreateIndex(
                name: "IX_OrderItemSupplier_SupplierStoreItemId",
                table: "OrderItemSupplier",
                column: "SupplierStoreItemId");

            migrationBuilder.CreateIndex(
                name: "IX_Orders_SupplierId",
                table: "Orders",
                column: "SupplierId");

            migrationBuilder.CreateIndex(
                name: "IX_QuarterlyPlans_SupplierId",
                table: "QuarterlyPlans",
                column: "SupplierId");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "OrderItemSupplier");

            migrationBuilder.DropTable(
                name: "QuarterlyPlans");

            migrationBuilder.DropTable(
                name: "Orders");

            migrationBuilder.DropTable(
                name: "SupplierStoreItems");

            migrationBuilder.DropTable(
                name: "StoreItems");

            migrationBuilder.DropTable(
                name: "Suppliers");
        }
    }
}
